// @(h)AppBase.cs ver 0.00 ( '24.06.22 Nov-Lab ) 作成開始
// @(h)AppBase.cs ver 0.51 ( '24.06.24 Nov-Lab ) ベータ版完成
// @(h)AppBase.cs ver 0.52 ( '24.06.26 Nov-Lab ) 機能追加：デバッガー動作中ミューテックス名を追加

// @(s)
// 　【アプリケーション基本部】アプリケーションの基本部分や共通部分を管理します。

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text;
using System.Windows.Forms;


namespace Exam_NamedSharedMemory
{
    //====================================================================================================
    /// <summary>
    /// 【アプリケーション基本部】アプリケーションの基本部分や共通部分を管理します。
    /// </summary>
    //====================================================================================================
    public static partial class AppBase
    {
        //====================================================================================================
        // グローバル定数定義
        //====================================================================================================

        /// <summary>
        /// 【デバッガー動作中ミューテックス名】デバッグ用プログラムが動作中かどうかを判別するための名前付きシステムミューテックスの名前です。
        /// </summary>
        /// <remarks>
        /// 補足<br/>
        /// ・この名前付きシステムミューテックスが存在するかどうかで、デバッグ用プログラムが動作中かどうかを判別できます。<br/>
        /// ・ミューテックスが存在するかどうかだけでチェック可能なので、所有権の取得や解放は行いません。<br/>
        /// </remarks>
        public const string MUTEXNAME_DEBUGGER_RUNNING = "SnowfallDebuggerRunning";


        //====================================================================================================
        // 内部定数定義
        //====================================================================================================

        /// <summary>
        /// 【コマンドライン引数：デバッガーモード指定オプション】デバッグ用プログラムとして起動する場合に指定するオプションです。
        /// </summary>
        private const string M_COMMANDLINEARG_DEBUGGERMODE = "/debugger";


        //====================================================================================================
        // static 公開メソッド
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【デバッガーモードチェック】コマンドライン引数をチェックして、このプロセスが
        /// デバッガーモード指定で起動されたかどうかを取得します。
        /// </summary>
        /// <param name="args">[in ]：コマンドライン引数配列</param>
        /// <returns>
        /// チェック結果[true = デバッガーモード / false = 通常モード]
        /// </returns>
        //--------------------------------------------------------------------------------
        public static bool IsDebuggerMode(string[] args)
        {
            //------------------------------------------------------------
            /// デバッガーモード指定で起動されたかどうかを取得する
            //------------------------------------------------------------
            foreach (var tmpArg in args)
            {                                                           //// コマンドライン引数配列を繰り返す
                if (string.Compare(tmpArg, M_COMMANDLINEARG_DEBUGGERMODE, true) == 0)
                {                                                       /////  デバッガーモード指定オプションが含まれる場合
                    return true;                                        //////   戻り値 = true(デバッガーモード) で関数終了
                }
            }

            return false;                                               //// 戻り値 = false(通常モード) で関数終了
        }


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【デバッガー起動】デバッグ用プログラムを起動します。
        /// </summary>
        //--------------------------------------------------------------------------------
        public static void LaunchDebugger()
        {
            //------------------------------------------------------------
            /// デバッグ用プログラムを起動する
            //------------------------------------------------------------
            Process.Start(Application.ExecutablePath,                   //// デバッガーモード指定オプション付きでプロセスを起動する
                          M_COMMANDLINEARG_DEBUGGERMODE);
        }

    } // class

} // namespace
